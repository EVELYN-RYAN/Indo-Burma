<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th colspan="5" class="text-center">@TableTitle</th>
            <th class="text-center">@IconHeader</th>
        </tr>
    </thead>
    <tbody>
        @if (Orders?.Count() > 0)
        {
            @foreach (Order r in Orders)
            {
                <tr>
                    <td>@r.OrderNumber</td>
                    <td>@r.FullName</td>
                    <td>@r.Email</td>
                    <th>Book</th>
                    <th>Quantity</th>

                    <td>
                        <a class="text-center" style="cursor:pointer;" @onclick="@(x=> OrderSelected.InvokeAsync(r.OrderNumber))"> <img class="rounded mx-auto d-block" src=@ButtonIcon/>
                        </a>
                    </td>
                </tr>
                @foreach (CartLineItem cl in r.Lines)
                {
                    <tr>
                        <td colspan="3"></td>
                        <td>@cl.Book.Title.</td>
                        <td>@cl.Quantity</td>
                    </tr>
                }
            }

        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">No Orders</td>
            </tr>
        }

    </tbody>
</table>

@code {

    [Parameter]
    public string TableTitle { get; set; } = "Orders";

    [Parameter]
    public IEnumerable<Order> Orders { get; set; }

    [Parameter]
    public string ButtonIcon { get; set; } = "https://img.icons8.com/external-outline-icons-pause-08/48/000000/external-delivering-lined-shipping-outline-icons-pause-08.png";


    [Parameter]
    public string IconHeader { get; set; } = "Shipped";

    [Parameter]
    public EventCallback<int> OrderSelected { get; set; }
}